//
//  ViewController.swift
//  Radius
//
//  Created by Kassandra Capretta on 10/29/19.
//  Copyright Â© 2019 Kassandra Capretta. All rights reserved.
//

import UIKit
import Koloda
import MaterialComponents.MaterialBottomNavigation
import Firebase
import FirebaseAuth
import FirebaseStorage

class ViewController: UIViewController {
    
    
    @IBOutlet weak var viewOnData: UIView!
    
    // pan down for more info on person
    @IBOutlet var panDown: UIPanGestureRecognizer!
    
    // click to match for dating
    @IBOutlet weak var datingButton: UIButton!
    
    // click to match for networking
    @IBOutlet weak var networkingButton: UIButton!
    
    // click to match for friendship
    @IBOutlet weak var friendshipButton: UIButton!
    
    @IBOutlet weak var cardView: KolodaView!
    
    // Labels to Pull Data
    @IBOutlet weak var nameLbl : UILabel!
    
    let images = ["download1","download2","download3"]
    let townImage = "Town"
    let bottomNavBar = MDCBottomNavigationBar()
    let firebaseServer = FirebaseFunctions.shared

    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Shadow on View
        self.viewOnData.layer.shadowColor = UIColor.gray.cgColor
        self.viewOnData.layer.shadowOpacity = 0.5
        self.viewOnData.layer.shadowOffset = CGSize(width: 2, height: 2)
        self.viewOnData.layer.shadowRadius = 7
        self.viewOnData.layer.masksToBounds = false

        
        // Pull Data Fields from newUser / Firebase
        nameLbl.text = newUser.firstName
        
        self.navigationController?.navigationBar.backgroundColor = .white
        
        view.bringSubviewToFront(datingButton)
        
        view.bringSubviewToFront(networkingButton)
        
        view.bringSubviewToFront(friendshipButton)
         Utilities.smallButton(datingButton)
         Utilities.smallButton(networkingButton)
         Utilities.smallButton(friendshipButton)
        
        // nameLbl.text = "James"
        cardView.delegate = self
        cardView.dataSource = self
        
        // Swipe gesture
        let swipeRight = UISwipeGestureRecognizer(target: self, action: Selector(("respondToSwipeGesture:")))
        swipeRight.direction = UISwipeGestureRecognizer.Direction.right
        self.view.addGestureRecognizer(swipeRight)
        
        let swipeLeft = UISwipeGestureRecognizer(target: self, action: Selector(("respondToSwipeGesture:")))
        swipeLeft.direction = UISwipeGestureRecognizer.Direction.left
        self.view.addGestureRecognizer(swipeLeft)

        let swipeDown = UISwipeGestureRecognizer(target: self, action: Selector(("respondToSwipeGesture:")))
        swipeDown.direction = UISwipeGestureRecognizer.Direction.down
        self.view.addGestureRecognizer(swipeDown)
    }
    
    @IBAction func radiusNextVC(_ sender: UIButton) {
        let storyboard = UIStoryboard(name: "Main", bundle: nil)
                let loginVC = storyboard.instantiateViewController(identifier: "loginViewController")
                self.navigationController?.pushViewController(loginVC, animated: true)
           

        let vc = CustomTabBarViewController()
                self.navigationController?.pushViewController(vc, animated: true)
        
    }
}

extension ViewController : KolodaViewDelegate, KolodaViewDataSource {
    func koloda(_ koloda: KolodaView, viewForCardAt index: Int) -> UIView {
        let view = UIImageView(image: UIImage(named: images[index]))
        
        return view
    }
    
    func kolodaNumberOfCards(_ koloda: KolodaView) -> Int {
        return images.count
    }    
    
}

// Swipe gesture responses

func respondToSwipeGesture(gesture: UIGestureRecognizer) {

    if let swipeGesture = gesture as? UISwipeGestureRecognizer {


        switch swipeGesture.direction {
        case UISwipeGestureRecognizer.Direction.right:
                print("Let's meet")
        case UISwipeGestureRecognizer.Direction.down:
                print("My radius")
        case UISwipeGestureRecognizer.Direction.left:
                print("No")
            default:
                break
        }
    }
}
